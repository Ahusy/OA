package code.spxt.cn.fragments;

import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;

import com.common.ui.FBaseFragment;
import com.common.viewinject.annotation.ViewInject;
import com.luck.picture.lib.PictureSelector;
import com.luck.picture.lib.config.PictureConfig;
import com.luck.picture.lib.config.PictureMimeType;
import com.luck.picture.lib.entity.LocalMedia;

import java.util.ArrayList;
import java.util.List;

import code.spxt.cn.R;
import code.spxt.cn.adapters.GridImageAdapter;
import code.spxt.cn.adapters.StepsThreeAdapter;
import code.spxt.cn.network.entity.PhotoEntity;
import code.spxt.cn.utils.ViewInjectUtils;

import static android.app.Activity.RESULT_OK;

/**
 * 出差旅费步骤三
 */

public class StepsThreeFragment extends FBaseFragment implements View.OnClickListener {

    @ViewInject(R.id.steps_three_money_t)
    private EditText tMoney;
    @ViewInject(R.id.steps_three_money_b)
    private EditText bMoney;
    @ViewInject(R.id.steps_three_add)
    private TextView add;
    @ViewInject(R.id.steps_three_recycler)
    private RecyclerView recyclerView;
    private int chooseMode = PictureMimeType.ofAll();
    private StepsThreeAdapter adapter;
    //    private GridImageAdapter adapter;
    private int indext;
    private ArrayList<PhotoEntity> entities;

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_spes_three,container,false);
        ViewInjectUtils.inject(this,view);
        initView();
        return view;
    }

    private void initView() {
        add.setOnClickListener(this);
        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
        entities = new ArrayList<>();
        adapter = new StepsThreeAdapter(getActivity(), entities,onAddPicClickListener);
        recyclerView.setAdapter(adapter);
//        adapter = new GridImageAdapter(getActivity(), onAddPicClickListener);
    }


    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.steps_three_add:
                PhotoEntity entity = new PhotoEntity();
                adapter.addData(0,entity);
                break;
        }
    }

    private GridImageAdapter.onAddPicClickListener onAddPicClickListener = new GridImageAdapter.onAddPicClickListener() {
        @Override
        public void onAddPicClick(int positions) {
            indext = positions;
            PictureSelector.create(StepsThreeFragment.this)
                    .openGallery(chooseMode)
                    .maxSelectNum(100)
                    .minSelectNum(1)
                    .selectionMode(PictureConfig.MULTIPLE)
                    .glideOverride(160, 160)
                    .previewEggs(true)
                    .forResult(PictureConfig.CHOOSE_REQUEST);
        }
    };

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == RESULT_OK) {
            switch (requestCode) {
                case PictureConfig.CHOOSE_REQUEST:
                    // 图片选择结果回调
                    List<LocalMedia> localMedia = PictureSelector.obtainMultipleResult(data);
                    // 例如 LocalMedia 里面返回三种 path
                    // 1.media.getPath(); 为原图 path
                    // 2.media.getCutPath();为裁剪后 path，需判断 media.isCut();是否为 true
                    // 3.media.getCompressPath();为压缩后 path，需判断 media.isCompressed();是否为 true
                    // 如果裁剪并压缩了，以取压缩路径为准，因为是先裁剪后压缩的
//                    adapter.setList(localMedia);
//                    adapter.notifyDataSetChanged();
                    entities.get(indext).getUrl().addAll(localMedia);
                    adapter.notifyDataSetChanged();
//                    DebugUtil.i(TAG, "onActivityResult:" + selectList.size());
                    Log.i("-----", "onActivityResult: "+ localMedia.size());
                    break;
            }
        }
    }
}
