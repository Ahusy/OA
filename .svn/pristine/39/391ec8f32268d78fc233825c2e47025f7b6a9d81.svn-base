package code.spxt.cn.adapters;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import java.util.ArrayList;

import code.spxt.cn.R;
import code.spxt.cn.network.entity.ChooseEntity;

/**
 * Created by dell on 2018/12/17
 */

public class StepsTwoCopyAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {

    private ArrayList<ChooseEntity> list;
    private Context context;
    private final int ONE = 1;
    private final int TWO = 2;
    private final int THREE = 3;
    private final int FOUR = 4;
    private final int FIVE = 5;
    private final int SIX = 6;
    private final int SEVEN = 7;

    public StepsTwoCopyAdapter(ArrayList<ChooseEntity> list, Context context) {
        this.context = context;
        this.list = list;
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        if (viewType == ONE) {
            return new ccfViewHolder(LayoutInflater.from(context).inflate(R.layout.view_ccf_copy,parent,false));
        } else if (viewType == TWO) {
            return new zsfViewHolder(LayoutInflater.from(context).inflate(R.layout.view_zsf_copy,parent,false));
        } else if (viewType == THREE) {
            return new pxfViewHolder(LayoutInflater.from(context).inflate(R.layout.view_pxf_copy,parent,false));
        } else if (viewType == FOUR) {
            return new qtfyViewHolder(LayoutInflater.from(context).inflate(R.layout.view_qtfy_copy,parent,false));
        } else if (viewType == FIVE) {
            return new hyfViewHolder(LayoutInflater.from(context).inflate(R.layout.view_hyf_copy,parent,false));
        } else if (viewType == SIX) {
            return new ccbzViewHolder(LayoutInflater.from(context).inflate(R.layout.view_ccbz_copy,parent,false));
        } else {
            return new hsbzViewHolder(LayoutInflater.from(context).inflate(R.layout.view_hsbz_copy,parent,false));
        }
    }

    @Override
    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
        ChooseEntity bean = list.get(position);
        if (holder instanceof ccfViewHolder) { // 车船费
            ccfViewHolder ccfHolder = (ccfViewHolder) holder;
            if (!TextUtils.isEmpty(bean.getStartTime())) {
                ccfHolder.ccfStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                ccfHolder.ccfEndTime.setText(bean.getEndTime());
            }
            if (!TextUtils.isEmpty(bean.getBars())) {
                ccfHolder.ccfTraffic.setText(bean.getBars());
            }

            if (!TextUtils.isEmpty(bean.getPeopleNum())) {
                ccfHolder.ccfPeople.setText(bean.getPeopleNum());
            } else {
                ccfHolder.ccfPeople.setText("");
            }

            if (!TextUtils.isEmpty(bean.getMoney())) {
                ccfHolder.ccfMoney.setText(bean.getMoney());
            } else {
                ccfHolder.ccfMoney.setText("");
            }

        } else if (holder instanceof zsfViewHolder) { // 住宿费
            zsfViewHolder zsfHolder = (zsfViewHolder) holder;

            if (!TextUtils.isEmpty(bean.getStartTime())) {
                zsfHolder.zsfStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                zsfHolder.zsfEndTime.setText(bean.getEndTime());
            }


            if (!TextUtils.isEmpty(bean.getPeopleNum())) {
                zsfHolder.zsfPeople.setText(bean.getPeopleNum());
            } else {
                zsfHolder.zsfPeople.setText("");
            }

            if (!TextUtils.isEmpty(bean.getMoney())) {
                zsfHolder.zsfMoney.setText(bean.getMoney());
            } else {
                zsfHolder.zsfMoney.setText("");
            }

        } else if (holder instanceof pxfViewHolder) { // 培训费
            pxfViewHolder pxfHolder = (pxfViewHolder) holder;

            if (!TextUtils.isEmpty(bean.getStartTime())) {
                pxfHolder.pxfStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                pxfHolder.pxfEndTime.setText(bean.getEndTime());
            }


            if (!TextUtils.isEmpty(bean.getPeopleNum())) {
                pxfHolder.pxfPeople.setText(bean.getPeopleNum());
            } else {
                pxfHolder.pxfPeople.setText("");
            }

            if (!TextUtils.isEmpty(bean.getMoney())) {
                pxfHolder.pxfMoney.setText(bean.getMoney());
            } else {
                pxfHolder.pxfMoney.setText("");
            }

        } else if (holder instanceof qtfyViewHolder) { // 其他费用
            qtfyViewHolder qtfyHolder = (qtfyViewHolder) holder;

            if (!TextUtils.isEmpty(bean.getStartTime())) {
                qtfyHolder.qtfyStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                qtfyHolder.qtfyEndTime.setText(bean.getEndTime());
            }

            if (!TextUtils.isEmpty(bean.getPeopleNum())) {
                qtfyHolder.qtfyPeople.setText(bean.getPeopleNum());
            } else {
                qtfyHolder.qtfyPeople.setText("");
            }


            if (!TextUtils.isEmpty(bean.getMoney())) {
                qtfyHolder.qtfyMoney.setText(bean.getMoney());
            } else {
                qtfyHolder.qtfyMoney.setText("");
            }

            if (!TextUtils.isEmpty(bean.getCostsThat())) {
                qtfyHolder.qtfyQtfyFysm.setText(bean.getCostsThat());
            } else {
                qtfyHolder.qtfyQtfyFysm.setText("");
            }

        } else if (holder instanceof hyfViewHolder) {  // 会议费
            hyfViewHolder hyfHolder = (hyfViewHolder) holder;

            if (!TextUtils.isEmpty(bean.getStartTime())) {
                hyfHolder.hyfStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                hyfHolder.hyfEndTime.setText(bean.getEndTime());
            }


            if (!TextUtils.isEmpty(bean.getPeopleNum())) {
                hyfHolder.hyfPeople.setText(bean.getPeopleNum());
            } else {
                hyfHolder.hyfPeople.setText("");
            }


            if (!TextUtils.isEmpty(bean.getMoney())) {
                hyfHolder.hyfMoney.setText(bean.getMoney());
            } else {
                hyfHolder.hyfMoney.setText("");
            }

        } else if (holder instanceof ccbzViewHolder) {  // 出差补助
            ccbzViewHolder ccbzHolder = (ccbzViewHolder) holder;
            if (!TextUtils.isEmpty(bean.getStartTime())) {
                ccbzHolder.ccbzStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                ccbzHolder.ccbzEndTime.setText(bean.getEndTime());
            }


            if (!TextUtils.isEmpty(bean.getDays())) {
                ccbzHolder.ccbzDay.setText(bean.getDays());
            } else {
                ccbzHolder.ccbzDay.setText("");
            }

            if (!TextUtils.isEmpty(bean.getMoney())) {
                ccbzHolder.ccbzMoney.setText(bean.getMoney());
            } else {
                ccbzHolder.ccbzMoney.setText("");
            }
        } else if (holder instanceof hsbzViewHolder) { // 伙食补助
            hsbzViewHolder hsbzHolder = (hsbzViewHolder) holder;

            if (!TextUtils.isEmpty(bean.getStartTime())) {
                hsbzHolder.hsbzStartTime.setText(bean.getStartTime());
            }
            if (!TextUtils.isEmpty(bean.getEndTime())) {
                hsbzHolder.hsbzEndTime.setText(bean.getEndTime());
            }


            if (!TextUtils.isEmpty(bean.getDays())) {
                hsbzHolder.hsbzDay.setText(bean.getDays());
            } else {
                hsbzHolder.hsbzDay.setText("");
            }

            if (!TextUtils.isEmpty(bean.getMoney())) {
                hsbzHolder.hsbzMoney.setText(bean.getMoney());
            } else {
                hsbzHolder.hsbzMoney.setText("");
            }
        }
    }

    @Override
    public int getItemViewType(int position) {
        int type = list.get(position).getType();
        if (type == ONE) {
            return ONE;
        }
        if (type == TWO) {
            return TWO;
        }
        if (type == THREE) {
            return THREE;
        }
        if (type == FOUR) {
            return FOUR;
        }
        if (type == FIVE) {
            return FIVE;
        }
        if (type == SIX) {
            return SIX;
        }
        if (type == SEVEN) {
            return SEVEN;
        }
        return super.getItemViewType(position);
    }

    @Override
    public int getItemCount() {
        return list.size();
    }

    public class ccfViewHolder extends RecyclerView.ViewHolder {
        private TextView ccfStartTime, ccfEndTime, ccfTraffic;
        private TextView ccfPeople, ccfMoney;

        public ccfViewHolder(View itemView) {
            super(itemView);
            ccfPeople = itemView.findViewById(R.id.view_ccf_person_num);
            ccfStartTime = itemView.findViewById(R.id.view_ccf_start_time);
            ccfEndTime = itemView.findViewById(R.id.view_ccf_end_time);
            ccfTraffic = itemView.findViewById(R.id.view_ccf_traffic);
            ccfMoney = itemView.findViewById(R.id.view_ccf_money);
        }
    }

    public class zsfViewHolder extends RecyclerView.ViewHolder {
        private TextView zsfStartTime, zsfEndTime;
        private TextView zsfPeople, zsfMoney;

        public zsfViewHolder(View itemView) {
            super(itemView);
            zsfPeople = itemView.findViewById(R.id.view_zsf_people);
            zsfStartTime = itemView.findViewById(R.id.view_zsf_start_time);
            zsfEndTime = itemView.findViewById(R.id.view_zsf_end_time);
            zsfMoney = itemView.findViewById(R.id.view_zsf_money);
        }
    }

    public class pxfViewHolder extends RecyclerView.ViewHolder {
        private TextView pxfStartTime, pxfEndTime;
        private TextView pxfPeople, pxfMoney;

        public pxfViewHolder(View itemView) {
            super(itemView);

            pxfPeople = itemView.findViewById(R.id.view_pfx_people);
            pxfStartTime = itemView.findViewById(R.id.view_pfx_start_time);
            pxfEndTime = itemView.findViewById(R.id.view_pfx_end_time);
            pxfMoney = itemView.findViewById(R.id.view_pfx_money);
        }
    }

    public class qtfyViewHolder extends RecyclerView.ViewHolder {
        private TextView qtfyStartTime, qtfyEndTime;
        private TextView qtfyPeople, qtfyMoney, qtfyQtfyFysm;

        public qtfyViewHolder(View itemView) {
            super(itemView);
            qtfyStartTime = itemView.findViewById(R.id.view_qtfy_start_time);
            qtfyEndTime = itemView.findViewById(R.id.view_qtfy_end_time);
            qtfyPeople = itemView.findViewById(R.id.view_qtfy_people);
            qtfyMoney = itemView.findViewById(R.id.view_qtfy_money);
            qtfyQtfyFysm = itemView.findViewById(R.id.view_qtfy_fysm);
        }
    }

    public class hyfViewHolder extends RecyclerView.ViewHolder {
        private TextView hyfStartTime, hyfEndTime;
        private TextView hyfPeople, hyfMoney;

        public hyfViewHolder(View itemView) {
            super(itemView);
            hyfPeople = itemView.findViewById(R.id.view_hyf_people);
            hyfStartTime = itemView.findViewById(R.id.view_hyf_start_time);
            hyfEndTime = itemView.findViewById(R.id.view_hyf_end_time);
            hyfMoney = itemView.findViewById(R.id.view_hyf_money);
        }
    }

    public class ccbzViewHolder extends RecyclerView.ViewHolder {
        private TextView ccbzStartTime, ccbzEndTime, ccbzStandard;
        private TextView ccbzDay, ccbzMoney;

        public ccbzViewHolder(View itemView) {
            super(itemView);
            ccbzStandard = itemView.findViewById(R.id.view_ccbz_standard);
            ccbzStartTime = itemView.findViewById(R.id.view_ccbz_start_time);
            ccbzEndTime = itemView.findViewById(R.id.view_ccbz_end_time);
            ccbzDay = itemView.findViewById(R.id.view_ccbz_day);
            ccbzMoney = itemView.findViewById(R.id.view_ccbz_money);
        }
    }

    public class hsbzViewHolder extends RecyclerView.ViewHolder {
        private TextView hsbzStartTime, hsbzEndTime, hsbzStandard;
        private TextView hsbzDay, hsbzMoney;

        public hsbzViewHolder(View itemView) {
            super(itemView);
            hsbzDay = itemView.findViewById(R.id.view_hsbz_day);
            hsbzStartTime = itemView.findViewById(R.id.view_hsbz_start_time);
            hsbzEndTime = itemView.findViewById(R.id.view_hsbz_end_time);
            hsbzStandard = itemView.findViewById(R.id.view_hsbz_standard);
            hsbzMoney = itemView.findViewById(R.id.view_hsbz_money);
        }
    }

}
